apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullname }}-web
  labels:
    app.kubernetes.io/name: {{ .Values.name }}
    helm.sh/chart: {{ .Values.build }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/type: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/type: web
        app.kubernetes.io/status: ok
    spec:
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}-web:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - "/usr/local/topmall/wrapper/bin/StartWrapper"  
          args: ["console"]
          volumeMounts:        
          - name: args-config-map
            mountPath: /usr/local/topmall/wrapper/conf/args.conf
            subPath: args.conf
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP    
          livenessProbe:
            httpGet:
              path: {{ .Values.web.livenessProbe }}
              port: http
            initialDelaySeconds: {{ .Values.web.initialDelaySeconds }}
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: {{ .Values.web.readinessProbe }}
              port: http
            initialDelaySeconds: {{ .Values.web.initialDelaySeconds }}
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:   
          - name: args-config-map
            configMap:
              name: "{{ .Values.image.configMap }}-web"