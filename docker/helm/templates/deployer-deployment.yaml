apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullname }}-deployer
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }} 
    helm.sh/chart: {{ .Values.build }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/type: deployer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/status: ok
        app.kubernetes.io/type: deployer
    spec:
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}-deployer:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - "/usr/local/topmall/wrapper/bin/StartWrapper"  
          args: ["console"]
          volumeMounts:        
          - name: args-config-map
            mountPath: /usr/local/topmall/wrapper/conf/args.conf
            subPath: args.conf
      hostNetwork: true
      volumes:   
      - name: args-config-map
        configMap:
          name: "{{ .Values.image.configMap }}-deployer"
